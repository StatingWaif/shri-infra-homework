name: release

on: [workflow_dispatch]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: npm
        run: npm ci
      - name: lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: npm
        run: npm ci
      - name: test
        run: npm run test

  create_release_branch:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: create new branch
        run: |
          git checkout -b releases/${{ github.run_number }}
          git push origin releases/${{ github.run_number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker_build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: login
        run: docker login --username oauth --password ${{ secrets.YANDEX_CLOUD_TOKEN }} cr.yandex
      - name: build image
        run: docker build -t cr.yandex/crpjke8raekf9lld1bh2/app:${{ github.run_number }} -t cr.yandex/crpjke8raekf9lld1bh2/app:${{ github.run_number }}_latest .

      - name: add image to registry
        run: docker push --all-tags cr.yandex/crpjke8raekf9lld1bh2/app

  create_tag:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set committer identity
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
      - name: create new branch
        run: |
          git tag -a v.${{ github.run_number }} -m v.${{ github.run_number }}
          git push origin --tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_issue:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: create issue
        run: |
          CURRENT_DATE=$(date -u +'%d.%m.%Y')
          DESCRIPTION=$(git log --oneline || echo "No commits to describe")
          gh issue create \
          --title "v.${{ github.run_number }}" \
          --body "$(cat <<EOF
          date: $CURRENT_DATE
          version: ${{github.run_number}}
          link: cr.yandex/crpjke8raekf9lld1bh2/app:${{ github.run_number }}
          commits:
          $DESCRIPTION
          EOF
          )"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
